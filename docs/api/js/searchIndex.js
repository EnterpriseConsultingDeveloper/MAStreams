Search.appendIndex(
    [
                {
            "fqsen": "\\MA\\Stream\\Collector",
            "name": "Collector",
            "summary": "",
            "url": "classes/MA-Stream-Collector.html"
        },                {
            "fqsen": "\\MA\\Stream\\Collector\u003A\u003Asupplier\u0028\u0029",
            "name": "supplier",
            "summary": "A\u0020function\u0020that\u0020creates\u0020and\u0020returns\u0020a\u0020new\u0020mutable\u0020result\u0020container.",
            "url": "classes/MA-Stream-Collector.html#method_supplier"
        },                {
            "fqsen": "\\MA\\Stream\\Collector\u003A\u003Aaccumulator\u0028\u0029",
            "name": "accumulator",
            "summary": "A\u0020function\u0020that\u0020folds\u0020a\u0020value\u0020into\u0020a\u0020mutable\u0020result\u0020container.",
            "url": "classes/MA-Stream-Collector.html#method_accumulator"
        },                {
            "fqsen": "\\MA\\Stream\\Collector\u003A\u003Afinisher\u0028\u0029",
            "name": "finisher",
            "summary": "Perform\u0020the\u0020final\u0020transformation\u0020from\u0020the\u0020intermediate\u0020accumulation\u0020type\u0020A\u0020to\u0020the\u0020final\u0020result\u0020type\u0020R.",
            "url": "classes/MA-Stream-Collector.html#method_finisher"
        },                {
            "fqsen": "\\MA\\Stream\\Collectors",
            "name": "Collectors",
            "summary": "",
            "url": "classes/MA-Stream-Collectors.html"
        },                {
            "fqsen": "\\MA\\Stream\\Collectors\u003A\u003Aof\u0028\u0029",
            "name": "of",
            "summary": "",
            "url": "classes/MA-Stream-Collectors.html#method_of"
        },                {
            "fqsen": "\\MA\\Stream\\Collectors\u003A\u003AgroupingBy\u0028\u0029",
            "name": "groupingBy",
            "summary": "Returns\u0020a\u0020Collector\u0020implementing\u0020a\u0020\u0022group\u0020by\u0022\u0020operation\u0020on\u0020input\u0020elements,\ngrouping\u0020elements\u0020according\u0020to\u0020a\u0020classification\u0020function,\u0020and\u0020returning\u0020the\u0020results\u0020in\u0020an\u0020associative\u0020array.",
            "url": "classes/MA-Stream-Collectors.html#method_groupingBy"
        },                {
            "fqsen": "\\MA\\Stream\\Collectors\u003A\u003AtoSet\u0028\u0029",
            "name": "toSet",
            "summary": "Returns\u0020a\u0020Collector\u0020that\u0020accumulates\u0020the\u0020input\u0020elements\u0020into\u0020a\u0020new\u0020Set",
            "url": "classes/MA-Stream-Collectors.html#method_toSet"
        },                {
            "fqsen": "\\MA\\Stream\\Collectors\u003A\u003AtoList\u0028\u0029",
            "name": "toList",
            "summary": "Returns\u0020a\u0020Collector\u0020that\u0020accumulates\u0020the\u0020input\u0020elements\u0020into\u0020a\u0020new\u0020List.",
            "url": "classes/MA-Stream-Collectors.html#method_toList"
        },                {
            "fqsen": "\\MA\\Stream\\Collectors\u003A\u003Aaveraging\u0028\u0029",
            "name": "averaging",
            "summary": "Returns\u0020a\u0020Collector\u0020that\u0020produces\u0020the\u0020arithmetic\u0020mean\u0020of\u0020a\u0020numeric\u002Dvalued\u0020function\u0020applied\u0020to\u0020the\u0020input\u0020elements.",
            "url": "classes/MA-Stream-Collectors.html#method_averaging"
        },                {
            "fqsen": "\\MA\\Stream\\Collectors\u003A\u003Asumming\u0028\u0029",
            "name": "summing",
            "summary": "Returns\u0020a\u0020Collector\u0020that\u0020produces\u0020the\u0020sum\u0020of\u0020a\u0020double\u002Dvalued\u0020function\u0020applied\u0020to\u0020the\u0020input\u0020elements.",
            "url": "classes/MA-Stream-Collectors.html#method_summing"
        },                {
            "fqsen": "\\MA\\Stream\\Collectors\u003A\u003Astatistics\u0028\u0029",
            "name": "statistics",
            "summary": "Returns\u0020a\u0020Collector\u0020that\u0020produces\u0020simple\u0020statistics\u0020of\u0020the\u0020input\u0020elements.",
            "url": "classes/MA-Stream-Collectors.html#method_statistics"
        },                {
            "fqsen": "\\MA\\Stream\\Collectors\u003A\u003Atop_n\u0028\u0029",
            "name": "top_n",
            "summary": "Returns\u0020a\u0020Collector\u0020that\u0020produces\u0020the\u0020top\u0020N\u0020elements\u0020from\u0020the\u0020input.",
            "url": "classes/MA-Stream-Collectors.html#method_top_n"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap",
            "name": "MinHeap",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Aparent\u0028\u0029",
            "name": "parent",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_parent"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Aleft_child\u0028\u0029",
            "name": "left_child",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_left_child"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Aright_child\u0028\u0029",
            "name": "right_child",
            "summary": "Equivalent\u0020to\u00201\u002Bleft_child\u0028\u0024i\u0029",
            "url": "classes/MA-Stream-MinHeap.html#method_right_child"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Aget_min\u0028\u0029",
            "name": "get_min",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_get_min"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Aextract\u0028\u0029",
            "name": "extract",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_extract"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Ainsert\u0028\u0029",
            "name": "insert",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_insert"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Aextract_and_insert\u0028\u0029",
            "name": "extract_and_insert",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_extract_and_insert"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Aheapify_bottom_top\u0028\u0029",
            "name": "heapify_bottom_top",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_heapify_bottom_top"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Aheapify_top_bottom\u0028\u0029",
            "name": "heapify_top_bottom",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_heapify_top_bottom"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003Acount\u0028\u0029",
            "name": "count",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_count"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003AgetIterator\u0028\u0029",
            "name": "getIterator",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#method_getIterator"
        },                {
            "fqsen": "\\MA\\Stream\\MinHeap\u003A\u003A\u0024arr",
            "name": "arr",
            "summary": "",
            "url": "classes/MA-Stream-MinHeap.html#property_arr"
        },                {
            "fqsen": "\\MA\\Stream\\Stream",
            "name": "Stream",
            "summary": "A\u0020sequence\u0020of\u0020elements\u0020supporting\u0020sequential\u0020aggregate\u0020operations.",
            "url": "classes/MA-Stream-Stream.html"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AgetIterator\u0028\u0029",
            "name": "getIterator",
            "summary": "",
            "url": "classes/MA-Stream-Stream.html#method_getIterator"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Aempty\u0028\u0029",
            "name": "empty",
            "summary": "",
            "url": "classes/MA-Stream-Stream.html#method_empty"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Aof\u0028\u0029",
            "name": "of",
            "summary": "",
            "url": "classes/MA-Stream-Stream.html#method_of"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AintRange\u0028\u0029",
            "name": "intRange",
            "summary": "Returns\u0020a\u0020sequential\u0020ordered\u0020IntStream\u0020from\u0020startInclusive\u0020\u0028inclusive\u0029\u0020to\u0020endExclusive\u0020\u0028exclusive\u0029\u0020by\u0020the\u0020specified\u0020incremental\u0020step.",
            "url": "classes/MA-Stream-Stream.html#method_intRange"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AintRangeClosed\u0028\u0029",
            "name": "intRangeClosed",
            "summary": "Returns\u0020a\u0020sequential\u0020ordered\u0020IntStream\u0020from\u0020startInclusive\u0020\u0028inclusive\u0029\u0020to\u0020endExclusive\u0020\u0028exclusive\u0029\u0020by\u0020the\u0020specified\u0020incremental\u0020step.",
            "url": "classes/MA-Stream-Stream.html#method_intRangeClosed"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Aconcat\u0028\u0029",
            "name": "concat",
            "summary": "Creates\u0020a\u0020lazily\u0020concatenated\u0020stream\u0020whose\u0020elements\u0020are\u0020all\u0020the\u0020elements\u0020of\u0020the\u0020first\u0020stream\nfollowed\u0020by\u0020all\u0020the\u0020elements\u0020of\u0020the\u0020second\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_concat"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Aiterate\u0028\u0029",
            "name": "iterate",
            "summary": "Returns\u0020an\u0020infinite\u0020sequential\u0020ordered\u0020Stream\u0020produced\u0020by\u0020iterative\u0020application\u0020of\u0020a\u0020function\u0020f\nto\u0020an\u0020initial\u0020element\u0020seed,\u0020producing\u0020a\u0020Stream\u0020consisting\u0020of\u0020seed,\u0020f\u0028seed\u0029,\u0020f\u0028f\u0028seed\u0029\u0029,\u0020etc.",
            "url": "classes/MA-Stream-Stream.html#method_iterate"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Agenerate\u0028\u0029",
            "name": "generate",
            "summary": "Returns\u0020an\u0020infinite\u0020sequential\u0020unordered\u0020stream\u0020where\u0020each\u0020element\u0020is\u0020generated\u0020by\u0020the\u0020provided\u0020Supplier.",
            "url": "classes/MA-Stream-Stream.html#method_generate"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Afilter\u0028\u0029",
            "name": "filter",
            "summary": "",
            "url": "classes/MA-Stream-Stream.html#method_filter"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Amap\u0028\u0029",
            "name": "map",
            "summary": "",
            "url": "classes/MA-Stream-Stream.html#method_map"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Areduce\u0028\u0029",
            "name": "reduce",
            "summary": "",
            "url": "classes/MA-Stream-Stream.html#method_reduce"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Acount\u0028\u0029",
            "name": "count",
            "summary": "Returns\u0020the\u0020count\u0020of\u0020elements\u0020in\u0020this\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_count"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Asum\u0028\u0029",
            "name": "sum",
            "summary": "Returns\u0020the\u0020sum\u0020of\u0020all\u0020elements\u0020into\u0020the\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_sum"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AsumInaccurate\u0028\u0029",
            "name": "sumInaccurate",
            "summary": "Returns\u0020the\u0020sum\u0020of\u0020all\u0020elements\u0020into\u0020the\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_sumInaccurate"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Amin\u0028\u0029",
            "name": "min",
            "summary": "Returns\u0020the\u0020minimum\u0020of\u0020all\u0020elements\u0020into\u0020the\u0020stream,\u0020or\u0020null\u0020for\u0020empty\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_min"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Amax\u0028\u0029",
            "name": "max",
            "summary": "Returns\u0020the\u0020minimum\u0020of\u0020all\u0020elements\u0020into\u0020the\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_max"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AanyMatch\u0028\u0029",
            "name": "anyMatch",
            "summary": "Returns\u0020whether\u0020any\u0020elements\u0020of\u0020this\u0020stream\u0020match\u0020the\u0020provided\u0020predicate.",
            "url": "classes/MA-Stream-Stream.html#method_anyMatch"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AallMatch\u0028\u0029",
            "name": "allMatch",
            "summary": "Returns\u0020whether\u0020all\u0020elements\u0020of\u0020this\u0020stream\u0020match\u0020the\u0020provided\u0020predicate.",
            "url": "classes/MA-Stream-Stream.html#method_allMatch"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AnoneMatch\u0028\u0029",
            "name": "noneMatch",
            "summary": "Returns\u0020whether\u0020no\u0020elements\u0020of\u0020this\u0020stream\u0020match\u0020the\u0020provided\u0020predicate.",
            "url": "classes/MA-Stream-Stream.html#method_noneMatch"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Adistinct\u0028\u0029",
            "name": "distinct",
            "summary": "Returns\u0020a\u0020stream\u0020consisting\u0020of\u0020the\u0020distinct\u0020elements\u0020of\u0020this\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_distinct"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Alimit\u0028\u0029",
            "name": "limit",
            "summary": "Returns\u0020a\u0020stream\u0020consisting\u0020of\u0020the\u0020elements\u0020of\u0020this\u0020stream,\u0020truncated\u0020to\u0020be\u0020no\u0020longer\u0020than\u0020maxSize\u0020in\u0020length.",
            "url": "classes/MA-Stream-Stream.html#method_limit"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Asorted\u0028\u0029",
            "name": "sorted",
            "summary": "Returns\u0020a\u0020stream\u0020consisting\u0020of\u0020the\u0020elements\u0020of\u0020this\u0020stream,\nsorted\u0020according\u0020to\u0020natural\u0020order\u0020or\u0020to\u0020the\u0020provided\u0020Comparator.",
            "url": "classes/MA-Stream-Stream.html#method_sorted"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Apeek\u0028\u0029",
            "name": "peek",
            "summary": "Returns\u0020a\u0020stream\u0020consisting\u0020of\u0020the\u0020elements\u0020of\u0020this\u0020stream,\u0020additionally\u0020performing\u0020the\u0020provided\u0020action\non\u0020each\u0020element\u0020as\u0020elements\u0020are\u0020consumed\u0020from\u0020the\u0020resulting\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_peek"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AflatMap\u0028\u0029",
            "name": "flatMap",
            "summary": "Returns\u0020a\u0020stream\u0020consisting\u0020of\u0020the\u0020results\u0020of\u0020replacing\u0020each\u0020element\u0020of\u0020this\u0020stream\nwith\u0020the\u0020contents\u0020of\u0020a\u0020mapped\u0020stream\u0020produced\u0020by\u0020applying\u0020the\u0020provided\u0020mapping\u0020function\u0020to\u0020each\u0020element.",
            "url": "classes/MA-Stream-Stream.html#method_flatMap"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Aflatten\u0028\u0029",
            "name": "flatten",
            "summary": "Returns\u0020a\u0020stream\u0020consisting\u0020of\u0020the\u0020results\u0020of\u0020replacing\u0020each\u0020Traversable\u0020or\u0020array\u0020element\u0020of\u0020this\u0020stream\nwith\u0020the\u0020contents\u0020of\u0020each\u0020element\u0020of\u0020the\u0020Traversable\u0020or\u0020array,\u0020recursively.",
            "url": "classes/MA-Stream-Stream.html#method_flatten"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Askip\u0028\u0029",
            "name": "skip",
            "summary": "Returns\u0020a\u0020stream\u0020consisting\u0020of\u0020the\u0020remaining\u0020elements\u0020of\u0020this\u0020stream\u0020after\u0020discarding\u0020the\u0020first\u0020n\u0020elements\u0020of\u0020the\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_skip"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AtakeWhile\u0028\u0029",
            "name": "takeWhile",
            "summary": "Returns\u0020a\u0020stream\u0020consisting\u0020of\u0020the\u0020longest\u0020prefix\u0020of\u0020elements\u0020taken\u0020from\u0020this\u0020stream\nthat\u0020match\u0020the\u0020given\u0020predicate.",
            "url": "classes/MA-Stream-Stream.html#method_takeWhile"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AdropWhile\u0028\u0029",
            "name": "dropWhile",
            "summary": "Returns\u0020a\u0020stream\u0020consisting\u0020of\u0020the\u0020remaining\u0020elements\u0020of\u0020this\u0020stream\nafter\u0020dropping\u0020the\u0020longest\u0020prefix\u0020of\u0020elements\u0020that\u0020match\u0020the\u0020given\u0020predicate.",
            "url": "classes/MA-Stream-Stream.html#method_dropWhile"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AforEach\u0028\u0029",
            "name": "forEach",
            "summary": "Performs\u0020an\u0020action\u0020for\u0020each\u0020element\u0020of\u0020this\u0020stream.",
            "url": "classes/MA-Stream-Stream.html#method_forEach"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003Acollect\u0028\u0029",
            "name": "collect",
            "summary": "",
            "url": "classes/MA-Stream-Stream.html#method_collect"
        },                {
            "fqsen": "\\MA\\Stream\\Stream\u003A\u003AtoArray\u0028\u0029",
            "name": "toArray",
            "summary": "",
            "url": "classes/MA-Stream-Stream.html#method_toArray"
        },                {
            "fqsen": "\\",
            "name": "\\",
            "summary": "",
            "url": "namespaces/default.html"
        },                {
            "fqsen": "\\MA\\Stream",
            "name": "Stream",
            "summary": "",
            "url": "namespaces/ma-stream.html"
        },                {
            "fqsen": "\\MA",
            "name": "MA",
            "summary": "",
            "url": "namespaces/ma.html"
        }            ]
);
